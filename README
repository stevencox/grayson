
Grayson is a toolchain for designing, executing, debugging and sharing scientific workflows. It consists of
   - An editor, yEd by yWorks for creating workflow components
   - A compiler for parsing and linking components into a workflow
   - A visual debugger for executing and troubleshooting workflows

Editor: 

yEd is a desktop application and GraphML editor. It provides point and click, drag and drop and other familiar user interface metaphors. Graph nodes may be annotated and all artifacts are saved as XML.

Compiler:

The compiler is a python command line program which assembles GraphML models into an abstract syntax tree and emits a Pegasus DAX with all necessary catalogs.

It also proivides a packager which assembles workflow artifacts into a compressed archive for submission to the execution environment.

Execution Environment:

The execution environment is a web application allowing upload and execution of packaged workflows.

It reads GraphML workflows with embedded JSON annotations and renders them using the HTML5 Canvas API.                                                                                     

It also compiles the workflow to a Pegasus WMS DAX and submits it for execution.

It provides monitoring infrastructure consisting of:
   - An AMQP message queue
   - A distributed task queue - Celery
   - Asynchronous event notification to the client via Node.js

This allows workflow events to be dynamically rendered on the user interface.


 